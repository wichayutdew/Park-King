<!DOCTYPE html>
<html>
  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://code.jquery.com/jquery-3.3.1.js" integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/stylesheet/style.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.0/css/bootstrap.min.css" integrity="sha384-PDle/QlgIONtM1aqA2Qemk5gPOE7wFq8+Em+G/hmo5Iq0CCmYZLv3fVRDJ4MMwEA" crossorigin="anonymous">


    <title>Instascan</title>
    <script type="text/javascript" src="instascan.min.js"></script>

  </head>
  <body>
    <!-- <div>
      <video id="preview"></video>
    </div>

    <script type="text/javascript">
      function Scanner() {
          console.log('scanner');
          let Instascan = require('instascan');
          let scanner = new Instascan.Scanner(opts);
          let opts = {
              // Whether to scan continuously for QR codes. If false, use scanner.scan() to manually scan.
              // If true, the scanner emits the "scan" event when a QR code is scanned. Default true.
              continuous: true,

              // The HTML element to use for the camera's video preview. Must be a <video> element.
              // When the camera is active, this element will have the "active" CSS class, otherwise,
              // it will have the "inactive" class. By default, an invisible element will be created to
              // host the video.
              video: document.getElementById('preview'),

              // Whether to horizontally mirror the video preview. This is helpful when trying to
              // scan a QR code with a user-facing camera. Default true.
              mirror: true,

              // Whether to include the scanned image data as part of the scan result. See the "scan" event
              // for image format details. Default false.
              captureImage: false,

              // Only applies to continuous mode. Whether to actively scan when the tab is not active.
              // When false, this reduces CPU usage when the tab is not active. Default true.
              backgroundScan: true,

              // Only applies to continuous mode. The period, in milliseconds, before the same QR code
              // will be recognized in succession. Default 5000 (5 seconds).
              refractoryPeriod: 5000,

              // Only applies to continuous mode. The period, in rendered frames, between scans. A lower scan period
              // increases CPU usage but makes scan response faster. Default 1 (i.e. analyze every frame).
              scanPeriod: 1
          };
          scanner.addListener('scan', function (content) {
            console.log(content);
          });
          Instascan.Camera.getCameras().then(function (cameras) {
            if (cameras.length > 0) {
              scanner.start(cameras);
            } else {
              console.error('No cameras found.');
            }
          }).catch(function (e) {
            console.error(e);
          });
    }
    Scanner();
    </script> -->

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.0/js/bootstrap.min.js" integrity="sha384-7aThvCh9TypR7fIc2HV4O/nFMVCBwyIUKL8XCtKE+8xgCgl/PQGuFsvShjr74PBp" crossorigin="anonymous"></script>

  </body>
</html>
